---
{T}routes_head_yaml{/T}
- action:
    target: ${self}/navbar-proxy/alm-static/404.html
  pattern:
    path: /static/404.html
- action:
    flags:
      hasZones: true
    redirect: /edge
  pattern:
    path: ^/$
- action:
    flags:
      jwtRequired: true
      noCache: true
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/landing.html
  pattern:
    path: ^/edge/?$
- action:
    flags:
      hasZones: true
    target: ${self}/spa-proxy/alm-static/static-assets/favicon.ico
  pattern:
    path: ^/favicon.ico$
- action:
    flags:
      resetPath: true
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/${1}.html
  pattern:
    path: ^/(403|404|50x)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/no-org.html
  pattern:
    path: ^/no-org$
- action:
    flags:
      hasZones: true
    target: ${self}/spa-proxy/alm-static/static-assets
  pattern:
    path: ^/static-assets
- action:
    flags:
      hasZones: true
    target: ${self}/spa-proxy/navbar/index.css
  pattern:
    path: ^/index.css$
- action:
    flags:
      hasZones: true
    target: ${self}/spa-proxy/alm-static/static-assets/beta-useragreement.pdf
  pattern:
    path: ^/beta_useragreement$
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      resetPath: true
      hasZones: true
      copyZone: true
    target: {T}routes_login{/T}/userinfo
  pattern:
    path: ^/userinfo$
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
    target: ${self}/xapi/users
  pattern:
    path: ^/users
- action:
    flags:
      resetPath: true
      hasZones: true
      copyZone: true
    redirect: {T}routes_login{/T}/mfa?callback=${%ssodefaulturl}
  pattern:
    path: ^/account-details$
- action:
    flags:
      hasZones: true
    redirect: {T}routes_accounts{/T}/accounts/dashboard
  pattern:
    path: ^/account-dashboard$
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      resetPath: true
      keepCookies: true
      hasZones: true
      copyZone: true
    target: {T}routes_shoehorn{/T}/buildInfo
  pattern:
    path: ^/buildInfo$
- action:
    flags:
      copyZone: true
      csrfValidate: true
    target: {T}routes_shoehorn{/T}/${1}
  pattern:
    path: /(platform/(?:scripts|components|styles|branding).+)$
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      resetPath: true
      keepCookies: true
      hasZones: true
    target: ${self}/navbar-shoehorn/${1}
  pattern:
    path: /(platform(?:/.*)?)$
- action:
    flags:
      resetPath: true
      hasZones: true
    target: {T}routes_shoehorn{/T}/sendPassword
  pattern:
    path: ^/(sendPassword)
- action:
    flags:
      resetPath: true
      hasZones: true
    target: {T}routes_shoehorn{/T}/forgotpassword
  pattern:
    path: ^/(forgotpassword)
- action:
    flags:
      resetPath: true
      hasZones: true
    target: {T}routes_shoehorn{/T}/setpassword
  pattern:
    path: ^/(setpassword)
- action:
    flags:
      resetPath: true
      hasZones: true
    target: {T}routes_shoehorn{/T}/resetpassword/${1}
  pattern:
    path: ^/resetpassword/([^/]+)
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
      csrfValidate: true
    target: {T}routes_shoehorn{/T}/platform/${1}/analytics/v2/asyncReports/${2}?startDateTime=${3}&endDateTime=${4}&timeUnit=${5}
  pattern:
    path: ^/platform/([^/]+)/analytics/v2/asyncReports/([^/]+)?startDateTime=([^/]+)&endDateTime=([^/]+)&timeUnit=([^/]+)
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      resetPath: true
      keepCookies: true
      hasZones: true
      copyZone: true
    target: {T}routes_shoehorn{/T}/${1}
  pattern:
    path: ^/((?:account|appsbyproduct|logout|audits|buildinfo|components|developercounts|gw|oauthcallbackwithauthcode|oauthrefreshtoken|platform|us|ws)\b.*)$
- action:
    flags:
      hasZones: true
      copyZone: true
    target: {T}routes_shoehorn{/T}/${1}
  pattern:
    path: ^/((?:public|scripts|styles)\b.*)$
- action:
    flags:
      hasZones: true
    target: {T}routes_apiportal{/T}/api/
  pattern:
    path: ^/portals/api/
- action:
    target: {T}routes_apiportal{/T}/admin/themes/
  pattern:
    path: ^/portals/admin/themes/
- action:
    flags:
      jwtValidate: true
      jwtRequired: true
      jwtKeepHeader: true
      keepCookies: true
      resetPath: true
      hasZones: true
    target: {T}routes_docstore{/T}/specs/new
  pattern:
    path: ^/specs/new
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/${1}/${1}/bundles/${2}
  pattern:
    path: ^/(clusters|portals|specs)/bundles/(.+)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/${1}/${2}
  pattern:
    path: ^/(clusters|portals|specs)/(.+.(?:png|js|css|svg|jpg))$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
    target: ${self}/navbar-proxy/${1}/index.html
  pattern:
    path: ^/(clusters|portals|specs)
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/products/index.html
  pattern:
    path: ^/(apiproducts)/?$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/products/${1}/${2}
  pattern:
    path: ^/(apiproducts)/(.+)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/shared-flows/index.html
  pattern:
    path: ^/(sharedflows)/?$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/shared-flows/${1}/${2}
  pattern:
    path: ^/(sharedflows)/(.+)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/${1}/index.html
  pattern:
    path: ^/(developers|proxies|proxies-new|apps|history|notifications|provisioning-status|async-reports)/?$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/${1}/${1}/${2}
  pattern:
    path: ^/(developers|proxies|proxies-new|apps|history|notifications|provisioning|async-reports)/(.+)$
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: ${self}/xapi/mint/organizations
  pattern:
    path: ^/mint/organizations
    accept: application/json
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
      csrfValidate: true
    target: ${self}/xapi/audits/organizations/${1}${2}
  pattern:
    path: ^/organizations/([^/]+)/history(.*)$
    accept: application/json
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
      csrfValidate: true
    target: ${self}/xapi/organizations/${1}/environments/${2}/queries/${3}/result
  pattern:
    path: /organizations/([^/]+)/environments/([^/]+)/queries/([^/]+)/result
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
      csrfValidate: true
    target: ${self}/xapi/organizations
  pattern:
    path: ^/organizations
    accept: application/json
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
      hasZones: true
    addHeaders:
      x-api-clientid: {T}routes_notificationskey{/T}
    target: {T}routes_notifications{/T}
  pattern:
    path: ^/nfy
    accept: application/json
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
    target: ${self}/xapi
  pattern:
    path: ^/x-api
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
    target: {T}routes_edgex{/T}/edgex
  pattern:
    path: ^/edgex
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/products/index.html
  pattern:
    path: ^/organizations/([^/]+)/(apiproducts)(?:(?:/|\?).*)?$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/shared-flows/index.html
  pattern:
    path: ^/organizations/([^/]+)/(sharedflows)(?:(?:/|\?).*)?$
- action:
    flags:
      resetPath: true
      jwtRequired: true
      noCache: true
      hasZones: true
      csrfGenerate: true
    target: ${self}/navbar-proxy/${2}/index.html
  pattern:
    path: ^/organizations/([^/]+)/(developers|proxies|proxies-new|apps|history|portals|notifications|specs|monetization|async-reports)(?:(?:/|\?).*)?$
- action:
    flags:
      jwtRequired: true
      jwtKeepHeader: true
    target: {T}routes_samplesregistry{/T}
  pattern:
    path: ^/samples-registry/?
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: {T}routes_samples{/T}/${1}
  pattern:
    path: ^/samples/(.+.(?:png|js|css))$
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/navbar-proxy/samples-spa/index.html
  pattern:
    path: ^/samples/?
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: {T}routes_usergridproxy{/T}
  pattern:
    path: ^/apibaas/?
    accept: application/json
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/spa-proxy/apibaas/apibaas/bundles/${1}
  pattern:
    path: ^/apibaas/bundles/(.+)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/spa-proxy/apibaas/index.html
  pattern:
    path: ^/apibaas/?
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/spa-proxy/monetization/monetization/bundles/${1}
  pattern:
    path: ^/monetization/bundles/(.+)$
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/navbar-proxy/monetization/index.html
  pattern:
    path: ^/monetization/?
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/spa-proxy/pinpoint/pinpoint/${1}/${2}
  pattern:
    path: ^/pinpoint/(bundles|images|fonts|swf)/(.+)$
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: {T}routes_desired{/T}/
  pattern:
    path: ^/pinpoint/desired/
    accept: application/json
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: {T}routes_provisioningproxy{/T}/
  pattern:
    path: ^/provisioning-proxy
    accept: application/json
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: {T}routes_pinpointapi{/T}/${1}/
  pattern:
    path: ^/pinpoint/(inventory|alerts|metrics|logs)/
    accept: application/json
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
    target: {T}routes_availability{/T}/
  pattern:
    path: ^/pinpoint/availability/
    accept: application/json
- action:
    flags:
      resetPath: true
      jwtRequired: true
    target: ${self}/navbar-proxy/pinpoint/index.html
  pattern:
    path: ^/pinpoint/?
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/spa-proxy/sonar/sonar/${1}/${2}
  pattern:
    path: ^/sonar/(bundles|images|fonts|swf)/(.+)$
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
      hasZones: true
    target: {T}routes_pinpointapi{/T}/${1}/
  pattern:
    path: ^/sonar/(inventory|alerts|metrics|logs)/
    accept: application/json
- action:
    flags:
      jwtRequired: true
      jwtValidate: true
      jwtKeepHeader: true
      hasZones: true
    target: {T}routes_availability{/T}/
  pattern:
    path: ^/sonar/availability/
    accept: application/json
- action:
    flags:
      resetPath: true
      jwtRequired: true
      hasZones: true
    target: ${self}/navbar-proxy/sonar/index.html
  pattern:
    path: ^/sonar/?
- action:
    flags:
      hasZones: true
      noCache: true
    target: ${self}/spa-proxy/navbar/common
  pattern:
    path: ^/common
- action:
    flags:
      hasZones: true
    target: {T}routes_docsui{/T}
  pattern:
    path: ^/docs/ui/
- action:
    redirect: {T}routes_docs{/T}${1}
  pattern:
    path: ^/docs(/?|(/.*))$
- action:
    flags:
      jwtValidate: true
      jwtRequired: true
      jwtKeepHeader: true
      keepCookies: true
      resetPath: true
      hasZones: true
    target: ${self}/navbar-proxy/${1}${2}
  pattern:
    path: ^/(folders|homeFolder|sharedWithMe|teams|trash|c3Rvc)(.*)$
    accept: text/html
- action:
    flags:
      jwtValidate: true
      jwtRequired: true
      jwtKeepHeader: true
      keepCookies: true
      resetPath: true
      hasZones: true
    target: {T}routes_docstore{/T}/${1}${2}
  pattern:
    path: ^/(folders|homeFolder|sharedWithMe|teams|trash|c3Rvc)(.*)$
- action:
    flags:
      jwtKeepHeader: true
      jwtRequired: true
    target: {T}routes_login{/T}/ids/
  pattern:
    path: ^/ids/
- action:
    flags:
      resetPath: true
      keepCookies: true
    forceHost: apigee.com
    target: {T}routes_apiconsole{/T}/${1}
  pattern:
    path: ^/([^/]+/embed/console/.*$|(?:console|providers|togo|resources|embed|cookie_alert|oauth_callback|oauth_error|oauth_success|oauth2_autonomous)/?.*$)
- action:
    flags:
      resetPath: true
    target: {T}routes_apiconsole{/T}/static/${1}
  pattern:
    path: ^/static/(blank.html$|(?:img|js|css)/.+$)
- action:
    flags:
      resetPath: true
    target: {T}routes_apiconsole{/T}/apis/${1}
  pattern:
    path: ^/apis/([0-9]+/css/custom-styles.css.*)$
- action:
    flags:
      hasZones: true
    target: ${self}/spa-proxy/static
  pattern:
    path: ^/static
- action:
    flags:
      resetPath: true
      hasZones: true
      copyZone: true
    redirect: {T}routes_classicui{/T}/platform/
  pattern:
    path: ^/classic-ui/
- action:
    target: {T}routes_mktgpantheon{/T}/
  pattern:
    path: ^/api-management/?
- action:
    target: {T}routes_mktgbrightedge{/T}/
  pattern:
    path: ^/about/cp/?
- action:
    target: {T}routes_mktgacquia{/T}/about/
  pattern:
    path: ^/about
- action:
    redirect: {T}routes_usergrid{/T}
  pattern:
    path: ^/(?:mobileanalytics|usergrid|appservices)/?$
- action:
    redirect: {T}routes_institute{/T}
  pattern:
    path: ^/institute$
- action:
    redirect: {T}routes_blogs{/T}
  pattern:
    path: ^/blog$
- action:
    redirect: {T}routes_marketing{/T}/about/pricing
  pattern:
    path: ^/pricing$
- action:
    redirect: {T}routes_newedgedocs{/T}
  pattern:
    path: ^/new-edge-docs
- action:
    redirect: {T}routes_marketing{/T}/about/jobs
  pattern:
    path: ^/(?:jobs|careers)$
- action:
    flags:
      hasZones: true
    redirect: {T}routes_login{/T}/logout.do?redirect=${%ssodefaulturl}/edge&client_id=${ssoclientid}
  pattern:
    path: ^/sign_out$
- action:
    flags:
      hasZones: true
      copyZone: true
    redirect: {T}routes_login{/T}/oauth/authorize?client_id=${ssoclientid}&response_type=code&redirect_uri=${%ssodefaulturl}/oauthCallback&state=${%ssodefaulturl}
  pattern:
    path: ^/(?:sign_in|login)$
- action:
    flags:
      hasZones: true
    redirect: {T}routes_login{/T}/sign_up
  pattern:
    path: ^/sign_up$
- action:
    redirect: {T}routes_marketing{/T}/api-management/#/pricing?int_source=upgrade&int_medium=product&int_campaign=smb
  pattern:
    path: ^/upgrade/([^/]+)$
- action:
    flags:
      resetPath: true
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/50x.html
  pattern:
    path: ^/internal-error$
{T}routes_tail_yaml{/T}
- action:
    flags:
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/no-feature.html
  pattern:
    path: ^/no-feature
- action:
    flags:
      resetPath: true
      hasZones: true
    target: ${self}/navbar-proxy/alm-static/404.html
  pattern:
    path: ^/
