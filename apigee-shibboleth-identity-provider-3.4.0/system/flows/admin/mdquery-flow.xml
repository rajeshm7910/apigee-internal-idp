<flow xmlns="http://www.springframework.org/schema/webflow"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
    parent="admin.abstract">
    
    <!-- Start action. -->

    <on-start>
        <evaluate expression="'ResponseView'"  result="flowScope.ErrorState"/>
        <evaluate expression="'ResponseView'"  result="flowScope.AuditedErrorState"/>
    </on-start>

    <action-state id="InitializeProfileRequestContext">
        <evaluate expression="InitializeProfileRequestContext" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="DecodeMessage" />
    </action-state>

    <action-state id="DecodeMessage">
        <evaluate expression="DecodeMessage" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="DoAdminPreamble" />
    </action-state>
    
    <!-- Resume actual flow processing. -->
    
    <action-state id="DoProfileWork">
        <evaluate expression="CheckAccess" />
        <evaluate expression="SAMLMetadataLookup" />
        <evaluate expression="PostLookupPopulateAuditContext" />
        <evaluate expression="'proceed'" />
    
        <transition on="proceed" to="ResponseView" />
    </action-state>
    
    <end-state id="ResponseView" view="mdquery">
        <on-entry>
            <evaluate expression="WriteAuditLog" />
            <evaluate expression="environment" result="requestScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
            <evaluate expression="T(org.opensaml.core.xml.util.XMLObjectSupport)" result="requestScope.XMLObjectSupport" />
            <evaluate expression="T(net.shibboleth.utilities.java.support.xml.SerializeSupport)" result="requestScope.SerializeSupport" />
            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
        </on-entry>
    </end-state>

    <bean-import resource="mdquery-beans.xml" />

</flow>
