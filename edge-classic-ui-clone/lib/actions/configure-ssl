#!/bin/bash
source "${APIGEE_ROOT}/apigee-lib/apigee-lib.sh" || exit 1
source "${APIGEE_ROOT}/apigee-lib/dofflag.sh" || exit 1

TOKEN_DIR="${APIGEE_ROOT}/token/application"
TOKEN_FILE="${TOKEN_DIR}/${APPLICATION}.properties"

validate_vars "${APIGEE_PREFIX}${APPLICATION}" "configure-ssl" || exit 1
echo "Configuring HTTPS for UI services"
HTTPSPORT="${HTTPSPORT:-$(get_input "Enter UI HTTPS port" mand="y")}"
DISABLE_HTTP="${DISABLE_HTTP:-$(get_input "Do you want to disable HTTP y/n" type="y/n"  default="y")}"
KEY_ALGO="${KEY_ALGO:-$(get_input "Enter SSL keystore algorithm"  default="JKS")}"
KEY_FILE_PATH="${KEY_FILE_PATH:-$(get_input "Enter SSL keystore absolute file path" mand="y")}"
KEY_PASS="${KEY_PASS:-$(get_input "Enter SSL keystore password" hidden="y" verify="y")}"
echo

DONE=0
while [ "${DONE}" -eq 0 ]; do
  [ -f "${KEY_FILE_PATH}" ] && DONE=1
  if [ "${DONE}" -eq 0 ]; then
    echo "${KEY_FILE_PATH} doesn't exists or it's not a regular file."
    KEY_FILE_PATH=$(get_input "Enter SSL keystore absolute file path" mand="y")
  fi
done

CUST_CONF="$APIGEE_ROOT/customer/conf"
KEY_FILE="$CUST_CONF/$( basename "${KEY_FILE_PATH}" )"
cp "${KEY_FILE_PATH}" "${KEY_FILE}"   || exit 1
chmod 600 "${KEY_FILE}"    || exit 1

PW2=$(echo "$KEY_PASS" | sed 's/[\/&]/\\&/g')
ENC_KEY_PASS=$("${JAVA_HOME}/bin/java" -cp "${COMPONENT_ROOT}/conf:${COMPONENT_ROOT}/lib/*" utils.EncryptUtil "${PW2}")
if [ $? -ne 0 ]; then
    echo "Error: Unable to encrypt credentials"
    echo "HTTPS configuration failed."
    exit 1
fi

ETC_DIR="$APIGEE_ROOT/etc/${APIGEE_PREFIX}${APPLICATION}.d"
if [ ! -d "$ETC_DIR" ]; then
  mkdir -p "$ETC_DIR" || exit 1
fi

UI_OPTIONS=""
[ "$DISABLE_HTTP" == "y" ] && UI_OPTIONS="$UI_OPTIONS -Dhttp.port=disabled"

UI_OPTIONS="${UI_OPTIONS} -Dhttps.port=${HTTPSPORT}"
UI_OPTIONS="${UI_OPTIONS} -Dhttps.keyStoreType=${KEY_ALGO}"
UI_OPTIONS="${UI_OPTIONS} -Dhttps.keyStore=${KEY_FILE}"
UI_OPTIONS="${UI_OPTIONS} -Dplay.http.sslengineprovider=services.CustomSSLEngineProvider"
[ -n "${KEY_PASS}" ] && UI_OPTIONS="${UI_OPTIONS} -Dhttps.keyStorePasswordEncrypted=${ENC_KEY_PASS}"

replace_var "${TOKEN_FILE}" "conf_application_play_self_signed_cert_path" "\"$EDGEUI_SELF_SIGNED_CERT_PATH"\"  || exit 1

if [ "$DISABLE_HTTP" == "y" ]; then
   replace_var "${TOKEN_FILE}" "conf_apigee-base_apigee.feature.usehttps" "\"true\""  || exit 1
else
   replace_var "${TOKEN_FILE}" "conf_apigee-base_apigee.feature.usehttps" "\"false\""  || exit 1
fi
echo "UI_OPTIONS=\"$UI_OPTIONS\"" > "$ETC_DIR/SSL.sh"         || exit 1

echo "Restarting UI service"
CHECKED_CALL \
"$APIGEE_ROOT/apigee-service/bin/apigee-service" "$COMPONENT_NAME" restart

CHECKED_CALL \
"$APIGEE_ROOT/apigee-service/bin/apigee-service" "$COMPONENT_NAME" wait_for_ready

echo "HTTPS for UI successfully configured"
